#!/system/bin/sh
# powercfg template by cjybyjk & yc9559
# License: GPL V3

project_name="WIPE2"
prj_ver="(prj_ver)"
project_author="yc9559"
soc_model="sd_820"
generate_date="Mon Apr 22 02:43:48 CST 2019"

is_big_little="true"

DEBUG_FLAG="false"

C0_GOVERNOR_DIR="/sys/devices/system/cpu/cpu0/cpufreq/interactive"
C1_GOVERNOR_DIR="/sys/devices/system/cpu/cpu2/cpufreq/interactive"
C0_CPUFREQ_DIR="/sys/devices/system/cpu/cpu0/cpufreq"
C1_CPUFREQ_DIR="/sys/devices/system/cpu/cpu2/cpufreq"
C0_CORECTL_DIR="/sys/devices/system/cpu/cpu0/core_ctl"
C1_CORECTL_DIR="/sys/devices/system/cpu/cpu2/core_ctl"

if ! $is_big_little ; then
	C0_GOVERNOR_DIR="/sys/devices/system/cpu/cpufreq/interactive"
fi

# $1:timer_rate $2:value
function set_param_little() 
{
	$DEBUG_FLAG && echo "little: set ${1} into ${2}"
	echo ${2} > ${C0_GOVERNOR_DIR}/${1}
}

function set_param_big() 
{
	$DEBUG_FLAG && echo "big: set ${1} into ${2}"
	echo ${2} > ${C1_GOVERNOR_DIR}/${1}
}

function set_param_all() 
{
	set_param_little ${1} "${2}"
	$is_big_little && set_param_big ${1} "${2}"
}

function set_param_HMP()
{
	$DEBUG_FLAG && echo "HMP: set ${1} into ${2}"
	echo ${2} > /proc/sys/kernel/${1}
}

# $1:timer_rate
function print_param() 
{
	if $is_big_little ; then
		print_value "LITTLE: ${1}" ${C0_GOVERNOR_DIR}/${1}
		print_value "big: ${1}" ${C1_GOVERNOR_DIR}/${1}
	else
		print_value "${1}" ${C0_GOVERNOR_DIR}/${1}
	fi
}

function before_modify()
{
	# disable hotplug to switch governor
	set_value 0 /sys/module/msm_thermal/core_control/enabled
	set_value N /sys/module/msm_thermal/parameters/enabled
	# Exynos hotplug
	lock_value 0 /sys/power/cpuhotplug/enabled
	lock_value 0 /sys/devices/system/cpu/cpuhotplug/enabled
	lock_value "interactive" ${C0_CPUFREQ_DIR}/scaling_governor
	chown 0.0 ${C0_GOVERNOR_DIR}/*
	chmod 0666 ${C0_GOVERNOR_DIR}/*
	if $is_big_little ; then
		lock_value "interactive" ${C1_CPUFREQ_DIR}/scaling_governor
		chown 0.0 ${C1_GOVERNOR_DIR}/*
		chmod 0666 ${C1_GOVERNOR_DIR}/*
	fi
	lock_value 0 /sys/module/cpu_boost/parameters/input_boost_ms
	lock_value "0:1113000 2:556000" /sys/module/cpu_boost/parameters/input_boost_freq

}

function after_modify()
{
	chmod 0444 ${C0_GOVERNOR_DIR}/*
	$is_big_little && chmod 0444 ${C1_GOVERNOR_DIR}/*
	# after_modify_params
	verify_param
}

# $1:value $2:file path
function set_value() 
{
	if [ -f $2 ]; then
		$DEBUG_FLAG && echo "set ${2} into ${1}"
		echo $1 > $2
	fi
}

# $1:value $2:file path
function lock_value()
{
	if [ -f $2 ]; then
		# chown 0.0 $2
		chmod 0666 $2
		echo $1 > $2
		chmod 0444 $2
		$DEBUG_FLAG && echo "lock ${2} into ${1}"
	fi                                                  
}

# $1:display-name $2:file path
function print_value() 
{
	if [ -f $2 ]; then
		echo -n "$1: "
		cat $2
	fi
}

function verify_param() 
{
	expected_target=${C0_GOVERNOR_DIR}/target_loads
	if [ "$action" = "powersave" ]; then
		expected_value="(powersave_tload)"
	elif [ "$action" = "balance" ]; then
		expected_value="85 422000:40 652000:80 844000:32 960000:76 1036000:36 1113000:32 1190000:36 1228000:72 1324000:68 1478000:72 1593000:68"
	elif [ "$action" = "performance" ]; then
		expected_value="(performance_tload)"
	elif [ "$action" = "fast" ]; then
		expected_value="(fast_tload)"
	fi
	if [ "`cat ${expected_target}`" = "${expected_value}" ]; then
		echo "${action} OK"
	elif [ "${expected_value}" = "(${action}_tload)" ]; then
		echo "${action} not included"
	else
		echo "${action} FAIL"
	fi
}

function get_mode()
{
    expected_target=${C0_GOVERNOR_DIR}/target_loads
	case "`cat ${expected_target}`" in
		"(powersave_tload)" ) echo "powersave OK" ;;
		"85 422000:40 652000:80 844000:32 960000:76 1036000:36 1113000:32 1190000:36 1228000:72 1324000:68 1478000:72 1593000:68" ) echo "balance OK" ;;
		"(performance_tload)" ) echo "performance OK" ;;
		"(fast_tload)" ) echo "fast OK" ;;
	esac
}

# RunOnce
if [ ! -f /dev/perf_runonce ]; then
	# set flag
	touch /dev/perf_runonce
	
		set_param_HMP sched_downmigrate 8
		set_param_HMP sched_upmigrate 8
		set_param_HMP sched_ravg_hist_size 3
		set_param_HMP sched_window_stats_policy 3

	# runonce_params
fi

action=$1
if [ ! -n "$action" ]; then
    action="balance"
fi

# wake up clusters
if $is_big_little; then
	if [ -f "$C0_CORECTL_DIR/min_cpus" ]; then
		C0_CORECTL_MINCPUS=`cat $C0_CORECTL_DIR/min_cpus`
		cat $C0_CORECTL_DIR/max_cpus > $C0_CORECTL_DIR/min_cpus
	fi
	if [ -f "$C1_CORECTL_DIR/min_cpus" ]; then
		C1_CORECTL_MINCPUS=`cat $C1_CORECTL_DIR/min_cpus`
		cat $C1_CORECTL_DIR/max_cpus > $C1_CORECTL_DIR/min_cpus
	fi
	set_value 1 /sys/devices/system/cpu/cpu0/online
	set_value 1 /sys/devices/system/cpu/cpu2/online
fi

if [ "$action" = "debug" ]; then
	echo "$project_name"
	echo "Version: $prj_ver"
	echo "Author: $project_author"
	echo "Platform: $soc_model"
	echo "Generated at $generate_date"
	echo ""
	print_param above_hispeed_delay
	print_param target_loads
	get_mode
else
	before_modify
	if [ "$action" = "powersave" ]; then
		echo "applying powersave"
		:
	elif [ "$action" = "balance" ]; then
		echo "applying balance"
		set_param_little hispeed_freq 844000
		set_param_little go_hispeed_load 93
		set_param_little min_sample_time 98000
		set_param_little max_freq_hysteresis 118000
		set_param_little above_hispeed_delay "158000 960000:38000 1036000:138000 1113000:198000 1190000:78000 1228000:98000 1324000:78000 1401000:98000 1478000:158000"
		set_param_little target_loads "85 422000:40 652000:80 844000:32 960000:76 1036000:36 1113000:32 1190000:36 1228000:72 1324000:68 1478000:72 1593000:68"
		set_param_big hispeed_freq 1785000
		set_param_big go_hispeed_load 86
		set_param_big min_sample_time 18000
		set_param_big max_freq_hysteresis 18000
		set_param_big above_hispeed_delay "198000 1996000:178000 2073000:138000"
		set_param_big target_loads "28 480000:40 556000:68 652000:56 729000:72 806000:97 883000:80 940000:89 1036000:76 1113000:96 1190000:64 1248000:94 1324000:99 1401000:87 1478000:86 1555000:64 1632000:32 1708000:28 1785000:99"
		set_param_all timer_rate 20000

	elif [ "$action" = "performance" ]; then
		echo "applying performance"
		:
	elif [ "$action" = "fast" ]; then
		echo "applying fast"
		:
	fi
	after_modify
fi

if $is_big_little; then
	set_value $C0_CORECTL_MINCPUS $C0_CORECTL_DIR/min_cpus
	set_value $C1_CORECTL_MINCPUS $C1_CORECTL_DIR/min_cpus
fi

exit 0
